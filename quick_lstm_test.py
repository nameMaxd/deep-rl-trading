#!/usr/bin/env python3
"""
üß† –ë–´–°–¢–†–´–ô LSTM –¢–ï–°–¢ - —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç!
"""

from src.rl.env import Env
from src.rl.agent import Agent
import numpy as np

def main():
    print("üß† –ë–´–°–¢–†–´–ô LSTM –¢–ï–°–¢")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    train_env = Env(
        csv_paths=["GOOG_2010-2024-06.csv"],
        fee=0.0002,
        trading_period=60,  # –∫–æ—Ä–æ—á–µ
        window=30           # –º–µ–Ω—å—à–µ –æ–∫–Ω–æ
    )
    
    print(f"üìä –û–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:")
    print(f"   Observation space: {train_env.stock.obs_space.shape}")
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
    agent = Agent(
        obs_space=train_env.stock.obs_space,
        lr=0.001,
        epsilon=0.8,
        epsilon_min=0.05,
        epsilon_decay=0.99,
        memory_size=5000,
        batch_size=128
    )
    
    print(f"ü§ñ –ê–≥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω: {agent.epsilon}")
    
    # –ë—ã—Å—Ç—Ä–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ 20 —ç–ø–∏–∑–æ–¥–æ–≤
    print("üèÉ –ë—ã—Å—Ç—Ä–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞...")
    
    for episode in range(20):
        train_env.reset()
        total_reward = 0
        
        while not train_env.stock.done:
            state = train_env.stock.get_state()
            action = agent.act(state)
            
            next_state, trade_action, reward, done = train_env.step(action)
            
            agent.remember(state, action, reward, next_state, done)
            
            if len(agent.memory) > agent.batch_size:
                agent.replay()
            
            total_reward += reward
        
        metrics = train_env.get_trading_metrics()
        
        if episode % 5 == 0:
            print(f"Ep {episode}: Profit ${metrics['total_profit_dollars']:.0f}, "
                  f"Trades {metrics['num_trades']}, "
                  f"Win% {metrics['win_rate']*100:.1f}, "
                  f"Œµ: {agent.epsilon:.3f}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–æ–¥–µ–ª—å
    agent.save("models/quick-lstm-test")
    print("üíæ –ú–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
    
    print("‚úÖ LSTM —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

if __name__ == "__main__":
    main() 