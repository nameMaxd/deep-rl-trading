#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç v11 –º–æ–¥–µ–ª–∏
"""

import torch
import numpy as np
from src.rl.env import Env
from src.rl.agent import Agent
import os

def quick_test():
    print("üöÄ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ v11 –º–æ–¥–µ–ª–∏")
    print("üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –º–æ–¥–µ–ª—å –≤–æ–æ–±—â–µ")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º OOS —Ñ–∞–π–ª–µ
    oos_file = "GOOG_2024-07_2025-04.csv"
    model_path = "models/google-trading-v11-honest_best"
    
    if not os.path.exists(oos_file):
        print(f"‚ùå OOS —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {oos_file}")
        return
        
    if not os.path.exists(model_path):
        print(f"‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {model_path}")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ä–µ–¥—É
    env = Env(csv_paths=[oos_file], fee=0.0002, trading_period=120, window=50)
    print(f"üìä –î–∞–Ω–Ω—ã—Ö: {len(env.stock.closes)} —Å—Ç—Ä–æ–∫")
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π v11
    v11_config = {
        'embeddings': 32,      # –ö–∞–∫ –≤ v11
        'heads': 2,            # –ö–∞–∫ –≤ v11
        'layers': 2,           # –ö–∞–∫ –≤ v11
        'fwex': 128,          # –ö–∞–∫ –≤ v11
        'dropout': 0.05,      # –ö–∞–∫ –≤ v11
        'neurons': 128,       # –ö–∞–∫ –≤ v11
        'lr': 0.001,          # –ö–∞–∫ –≤ v11
        'epsilon': 1.0,
        'epsilon_min': 0.01,
        'epsilon_decay': 0.997,
        'gamma': 0.95,
        'memory_size': 5000,
        'batch_size': 512,
        'update_freq': 5
    }
    
    agent = Agent(obs_space=env.stock.obs_space, **v11_config)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
    success = agent.load(model_path)
    if not success:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å")
        return
    
    # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –Ω–∞ 5 –ø–æ–∑–∏—Ü–∏—è—Ö
    results = []
    
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é 5 —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π...")
    
    for start_pos in [0, 10, 20, 30, 40]:
        try:
            # –°–±—Ä–æ—Å –Ω–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–æ–∑–∏—Ü–∏—é  
            state = env.reset_fixed(start_position=start_pos)
            
            total_trades = 0
            total_wins = 0
            
            # –ü—Ä–æ–≥–æ–Ω —ç–ø–∏–∑–æ–¥–∞
            while env.ind < env.end:
                # –î–µ–π—Å—Ç–≤–∏–µ –ë–ï–ó –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (–¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Å—Ç–∏—á–Ω–æ)
                action = agent.act(state, training=False)
                
                next_state, reward, done, _ = env.step(action)
                
                if action != 0:  # –¢–æ—Ä–≥–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è
                    total_trades += 1
                    if reward > 0:
                        total_wins += 1
                
                state = next_state
                
                if done:
                    break
            
            # –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
            metrics = env.get_trading_metrics()
            profit = metrics['total_profit_dollars']
            
            win_rate = total_wins / max(total_trades, 1) * 100
            
            print(f"  –ü–æ–∑–∏—Ü–∏—è {start_pos}: profit=${profit:.0f}, trades={total_trades}, win_rate={win_rate:.1f}%")
            results.append(profit)
            
        except Exception as e:
            print(f"  –ü–æ–∑–∏—Ü–∏—è {start_pos}: –û–®–ò–ë–ö–ê - {e}")
            results.append(0)
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"   –ú–µ–¥–∏–∞–Ω–∞: ${np.median(results):.0f}")
    print(f"   –°—Ä–µ–¥–Ω–µ–µ: ${np.mean(results):.0f}")
    print(f"   –î–∏–∞–ø–∞–∑–æ–Ω: ${min(results):.0f} - ${max(results):.0f}")
    print(f"   –ü—Ä–∏–±—ã–ª—å–Ω—ã—Ö: {(np.array(results) > 0).sum()}/5")
    
    if np.median(results) > 1000:
        print(f"   üí∞ –û–¢–õ–ò–ß–ù–û! –ú–µ–¥–∏–∞–Ω–∞ >$1000")
    elif np.median(results) > 100:
        print(f"   üëç –•–û–†–û–®–û! –ú–µ–¥–∏–∞–Ω–∞ >$100")
    elif np.median(results) > 0:
        print(f"   ü§î –°–†–ï–î–ù–ï! –ú–µ–¥–∏–∞–Ω–∞ >$0")
    else:
        print(f"   ‚ùå –ü–õ–û–•–û! –£–±—ã—Ç–æ—á–Ω–æ")
    
    print(f"\nüîç –í–´–í–û–î:")
    if max(results) < 100:
        print(f"   ‚ö†Ô∏è –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–û! –†–µ–∑—É–ª—å—Ç–∞—Ç $3065 –±—ã–ª —è–≤–Ω–æ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å—é!")
        print(f"   üìâ –¢–µ–∫—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞–º–Ω–æ–≥–æ —Ö—É–∂–µ –æ–∂–∏–¥–∞–µ–º—ã—Ö")
    else:
        print(f"   ‚úÖ –ï—Å—Ç—å —Ö–æ—Ä–æ—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –≤–æ–∑–º–æ–∂–Ω–æ –º–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç")

if __name__ == "__main__":
    quick_test() 